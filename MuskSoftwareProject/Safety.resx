<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qsUAAAAASUVORK5CYII=
</value>
  </data>
</root>